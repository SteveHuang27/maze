#define WORD unsigned int
#define BYTE unsigned char

//표시할 벽의 형태
enum {
        SOLID_WALL, //속이 채워진 벽
        EMPTY_WALL  //속이 빈 벽
};

//벽지도 상의 벽데이터가 가지는 값
enum {
        NO_WALL = 0, //벽이 없음
        XX_WALL = 3, //벽이 있는지 없는지 모른다.
                     //즉, 판별하지 않은 벽
        YES_WALL = 6, //벽이 있음
        MAPREF = 0xff //방향지도에서 가상마우스가
                      //움직일수 있는 위치를 나타낸다.
};

//미로에 관련된 객체
class MIRO {

protected:
        //미로의 좌측 최상단의 위치 win_x, win_y
        //bw: 한 블록의 폭
        //ww: 벽의 두께
        int win_x, win_y, bw, ww;

        //시뮬레이션할 벽정보를 저장하는 벽지도
	BYTE simmap[34*17];

        //현재 마우스가 알고있는 벽정보를 저장하는
        //벽지도
	BYTE wallmap[34*17];

        //최단거리 연산등을 위한 방향지도
	BYTE dirmap[34*17];

public:
        MIRO(); //생성자
        ~MIRO(); //파괴자

        //미로의 초기값(위치, 벽의 폭, 블록의 폭)을 설정하고 화면에 표시
	void setMIRO(int w_x,int w_y, int b_w, int w_w);

        //미로의 가장자리를 설정하는 함수
	void setboder(char *map, int spos, int delta);

        //미로의 벽지도를 초기화
        //가장자리 이외의 벽은 모르는 벽으로 초기화
	void initwallmap(char *map);

        //미로의 폴을 화면에 그려줌
	void drawpole(void);

        //pos위치에 type 형의 벽을 화면에 그려줌
        //type: SOLID_WALL: 속이 채워진 벽
		//      EMPTY_WALL: 속이 빈 벽
	void putwall(int pos, int type);

        //벽지도 map를 type형태의 벽으로 화면에 글림
	void drawmaze(char *map, int type);

        //방향지도를 그려주는 함수(서브루틴)
	void _putdirmap(int evencolor, int oddcolor);
        //방향지도를 그려주는 함수
	void putdirmap(void);
        //벽지도를 그려주는 함수(서브루틴)
	void _putwallmap(int evencolor, int oddcolor);
        //벽지도를 그려주는 함수
	void putwallmap(void);

        //벽지도 파일을 읽어들임(확장자 '.MAZ'파일)
	int loadmaze(char *filename);
};

//마우스 출력에 관련된 객체
class MOUSE {

protected:
        int flag; //현재 마우스가 표시되어 있으면 flag=1
                  //표시되어 있지 않으면 flag=0
        double x, y, dir; //마우스의 위치, 방향
                          //이는 그래픽상에 표시되는 마우스의
                          //위치(화면상의 x, y), 방향(0-360도)이다.
        double oldx, oldy; //이전의 마우스의 위치
        int speed; //마우스가 움직이는 속도
        int mloc[6]; //마우스의 세 꼭지점의 좌표
        char image[(13+7)/8*13*4+6]; //마우스가 표시될 지점의
                                     //배경화면을 저장할 변수

public:
        MOUSE(); //생성자
        ~MOUSE(); //파괴자

        //마우스를 초기 위치로 설정
	void sethome(int w_x, int w_y, int b_w, int w_w);

        //마우스의 속도를 설정
	void setspeed(int _speed);

        //마우스를 dist만큼 dir방향으로 이동
	void movemouse(double dist);

        //마우스의 방향을 회전
        //화면상에는 변화 없음
	void turnmouse(double angle);

        //마우스를 화면에 표시
	void putmouse(void );

        //마우스를 화면에서 지우고, 마우스 위치의 배경화면을 복구
	void erasemouse(void);

        //dist만큼의 거리를 일정간격으로 마우스를 이동
	void running(double dist);

        //angle만큼의 각도를 일정간격으로 마우스를 회전
	void turnning(double angle);
};

void initgr(void);  //그래픽 모드로 초기화
void closegr(void); //그래픽 모드를 닫음

